(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    144303,       3493]
NotebookOptionsPosition[     93736,       2571]
NotebookOutlinePosition[    140082,       3426]
CellTagsIndexPosition[    140039,       3423]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", 
  "\"\</Users/lucaarnaboldi/Desktop/staircase-ss/mathematica/Isserlis.m\>\""}]\
], "Input",
 CellChangeTimes->{{3.88917609433534*^9, 3.889176119919079*^9}, {
   3.889176311221629*^9, 3.8891763748276167`*^9}, 3.889176476202965*^9, {
   3.889176672392775*^9, 3.889176682503498*^9}, {3.890994311244248*^9, 
   3.89099431208451*^9}, {3.906106260046619*^9, 3.906106262513674*^9}, {
   3.9061094641499367`*^9, 3.9061094655734158`*^9}, 3.914303324866194*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],

Cell[CellGroupData[{

Cell[BoxData["Omega"], "Input",
 CellChangeTimes->{{3.906109467769216*^9, 3.906109468800918*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"6", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "\[CapitalDelta]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.906109470010832*^9, 3.9061094799272003`*^9}, {
   3.906109769638232*^9, 3.906109787153964*^9}, 3.906109894002713*^9, 
   3.9076713021372137`*^9, 3.907745708392392*^9, 3.907749207457515*^9, 
   3.907749399628682*^9, 3.907749504093479*^9, 3.907749574934574*^9, 
   3.907749680430149*^9, 3.907749717136916*^9, 3.907749867605147*^9, 
   3.9082663837344713`*^9, 3.908266430005948*^9, {3.908266692953964*^9, 
   3.908266721002474*^9}, 3.908266894122726*^9, 3.908267685538595*^9, 
   3.908267720753435*^9, 3.9082677559353333`*^9, 3.908268023271358*^9, {
   3.9082766120406*^9, 3.908276628961693*^9}, 3.9082776618532143`*^9, 
   3.908277763812562*^9, {3.908278249404375*^9, 3.908278263161714*^9}, 
   3.908278314453652*^9, 3.908966283937336*^9, 3.9089663394120903`*^9, 
   3.908966908270516*^9, 3.9089670225216312`*^9, 3.908967098198175*^9, 
   3.908967174435177*^9, 3.9089673828351727`*^9, 3.908967588581729*^9, {
   3.908967876868696*^9, 3.908967906273281*^9}, 3.908973969211576*^9, 
   3.9101730973810377`*^9, 3.910173524187935*^9, 3.9101735650843687`*^9, {
   3.910175616192566*^9, 3.910175635715819*^9}, {3.910176107720368*^9, 
   3.910176121821972*^9}, 3.910177210354705*^9, {3.910177498371141*^9, 
   3.910177513219675*^9}, 3.9101817301886*^9, {3.9104326318684072`*^9, 
   3.9104326604795313`*^9}, 3.91043272481992*^9, {3.910432811143269*^9, 
   3.9104328258465357`*^9}, 3.9143032508174953`*^9, {3.914303667826542*^9, 
   3.914303696119133*^9}, 3.9143045921174383`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"bf8a3dcc-2dec-4318-877c-88386adf87ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "2", "]"}]}], ")"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"lf", "[", "1", "]"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"lf", "[", "2", "]"}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"I2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "1", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "2", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "2", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2", "=", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "4"}], "-", 
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "4"}], "-", 
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "3"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", "1", ")"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"lf", "[", "3", "]"}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{"2", "*", 
       RowBox[{"lf", "[", "1", "]"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"I3", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"lf", "[", "2", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
         RowBox[{"12", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", "1", ")"}], "*", 
       RowBox[{"(", "1", ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"lf", "[", "3", "]"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"lf", "[", "4", "]"}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"lf", "[", "2", "]"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"I4", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "4", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
         RowBox[{"12", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "-", 
         RowBox[{"12", "*", 
          RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "4"}], "-", 
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "+", "3"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.90610581643575*^9, 3.9061058859481583`*^9}, {
   3.906106474094995*^9, 3.906106532362823*^9}, {3.9061066069904337`*^9, 
   3.906106615382628*^9}, {3.9061066750808268`*^9, 3.906106712009593*^9}, {
   3.906115106839115*^9, 3.906115122709948*^9}, {3.907745657851212*^9, 
   3.907745704584968*^9}, {3.907749117910213*^9, 3.907749201638482*^9}, {
   3.9077492846421947`*^9, 3.907749395631675*^9}, {3.907749463532156*^9, 
   3.907749567398479*^9}, {3.90774966156633*^9, 3.907749665341361*^9}, {
   3.907749788183622*^9, 3.9077498638018923`*^9}, {3.908266683682056*^9, 
   3.908266687621731*^9}, {3.908267597227324*^9, 3.908267610424596*^9}, {
   3.908267649381763*^9, 3.908267717109837*^9}, {3.908276469596464*^9, 
   3.9082764823283367`*^9}, {3.9082765503105497`*^9, 
   3.9082766261431417`*^9}, {3.90827760161267*^9, 3.90827765811966*^9}, {
   3.908277754167019*^9, 3.908277760578492*^9}, {3.9082781934978228`*^9, 
   3.908278260069944*^9}, 3.9082783409216833`*^9, {3.908966315631646*^9, 
   3.908966335740967*^9}, {3.9089668899534063`*^9, 3.908966903385786*^9}, {
   3.908967003376378*^9, 3.908967017594686*^9}, {3.908967078296946*^9, 
   3.908967170564126*^9}, {3.908967230305645*^9, 3.908967374339464*^9}, {
   3.908967543494525*^9, 3.908967558592546*^9}, {3.90896785160744*^9, 
   3.9089679032570467`*^9}, {3.908973937589469*^9, 3.9089739546369*^9}, {
   3.910173373000901*^9, 3.910173420819803*^9}, {3.910173480081517*^9, 
   3.910173538797153*^9}, {3.9101755863956003`*^9, 3.910175602387993*^9}, {
   3.910177181842781*^9, 3.910177194474375*^9}, {3.910177454003541*^9, 
   3.910177491399323*^9}, {3.910181698187571*^9, 3.910181718697147*^9}, {
   3.9102442609703608`*^9, 3.910244281617621*^9}, {3.9104326008984537`*^9, 
   3.910432657434931*^9}, {3.910432772698855*^9, 3.9104328066270437`*^9}, {
   3.9143033335418253`*^9, 3.91430335401856*^9}, {3.914303518398829*^9, 
   3.914303545905094*^9}, {3.9143035943185663`*^9, 3.914303662126877*^9}, {
   3.914304643785157*^9, 
   3.91430469069508*^9}},ExpressionUUID->"a01ba991-b15d-482b-b8ef-\
b6cf8e12977a"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
  RowBox[{"\[Lambda]", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.914303667830874*^9, 3.914303696129951*^9}, 
   3.914304592122527*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"7173649d-107e-4eb5-af2e-7ae36da1e601"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox[
   RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], "-", 
  SuperscriptBox[
   RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.914303667830874*^9, 3.914303696129951*^9}, 
   3.914304592123639*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"7b434d1f-dbf4-4c9d-8c5d-79980c86c006"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.914303667830874*^9, 3.914303696129951*^9}, 
   3.914304592124758*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"898cc908-3547-4996-8de4-7eaf3d82d444"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "2"]}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.914303667830874*^9, 3.914303696129951*^9}, 
   3.914304592125898*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"29855e28-cfd7-4e84-8d07-1e7c06014112"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Psit", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Psis", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDtt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "4"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDss", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "4"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "4"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "4"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"4", ",", "4"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDts", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDnoise", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2noise", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiGFt", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiGFs", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Riskss", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Risktt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Riskts", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pinv", " ", "=", " ", 
   RowBox[{"1", "/", "\[Rho]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qorthinv", " ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"q", "-", 
      RowBox[{
       RowBox[{"m", "^", "2"}], "/", "\[Rho]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFM", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"Psit", "-", "Psis"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQ", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"PhiGFt", "-", "PhiGFs"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQorth", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"GFstudent", " ", "-", " ", 
     RowBox[{"m", "*", "Pinv", "*", "GFteacher"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HDQ", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"PhiHDtt", "+", "PhiHDss", "-", 
     RowBox[{"2", "*", "PhiHDts"}], "+", 
     RowBox[{"\[CapitalDelta]", "*", "PhiHDnoise"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mUpdate", " ", "=", 
  RowBox[{"\[Gamma]", "*", "GFM"}]}], "\[IndentingNewLine]", 
 RowBox[{"qUpdate", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", "*", "\[Gamma]", "*", "GFQ"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", 
     RowBox[{"1", "/", "\[Alpha]"}], "*", "HDterm"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{"GFteacher", "*", "Pinv", "*", "GFteacher"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{"GForth", "*", "Qorthinv", "*", "GForth"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PopRisk", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{"Riskss", " ", "+", "Risktt", "-", 
     RowBox[{"2", "*", "Riskts"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxVkogwEAB/DN/TJGKTnWyIYUDTnLfErxYKRk6CvXTOamFeY+JkkReyBH
aMSKNEZsypGrrBwPhMxRUp82kYT4/nv49fMtqMyQ2DAYDC4NXzrohkWeFGE0
kCrcbzxLrPShCPHAfBK+Yx2n4F2+OhMLLeJcHBa7R+KfR14Blj20y3CDLKAG
j9jq6/DSa9pVFb3L+cUN1vURT5g5w3/BmrhEZjV993qW9UDeVXA5hyImDrMF
+DZemY0T9OocfOKuGMGkumcai/dVszhqxXELi6Lfn/DOWOEzHnRwfsObyt4P
bL6b/sZc7f4vFpBCUwX9pzzhHm+8MkPZfhTh9KVNxi9Op6mYozwV4e083o4r
vbdcb32UbZNsDqII/xgVieX5LAmuE+RLsd2UWy3uNHDq8YNHWxcO416rcPHC
zBy2HLAW8arGrMOtQcQaZo83GzDDa9mEQya/3nBEyTnTQi81KSS4tNFOimUt
/Apc1qGxbh8+pMDpRmETLvI/aseRf+Zu/A/wWPoi
  "],
 CellLabel->"In[95]:=",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],

Cell[BoxData[
 RowBox[{"6", " ", "m", " ", "\[Gamma]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "q"}], "+", "\[Rho]"}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"3c2fdc70-0615-4d9c-97bd-c2e91df56361"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Gamma]", " ", "\[CapitalDelta]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "q"}], "+", "\[Rho]"}], ")"}]}], "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"6", " ", "q", " ", "\[Gamma]"}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Rho]"}]}], ")"}]}]}], 
       ")"}]}], "+", 
     RowBox[{"q", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["q", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"3", " ", "\[Alpha]"}]}], ")"}], " ", "\[Gamma]"}], "-", 
        RowBox[{"3", " ", "q", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", "\[Gamma]", " ", 
            "\[Rho]"}]}], ")"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", "\[Gamma]", " ", 
            "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  "\[Alpha]"]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592251382*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"efe2175d-def6-4c2a-9039-ac2d00f82824"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "q"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "2"]}], "-", 
    RowBox[{"2", " ", "\[Rho]"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Rho]", "2"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "-", "q", "-", "\[Rho]", "+", 
       RowBox[{"q", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.9143045922529163`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"14e64d8e-0ede-4966-a078-d07e713a3a14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mUpdateSpherical", " ", "=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"mUpdate", "-", 
       RowBox[{
        RowBox[{"m", "/", "2"}], "*", "qUpdate"}]}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]", "->", "1"}], ",", 
       RowBox[{"q", "->", "1"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.908266318749345*^9, 3.9082663205408154`*^9}, {
  3.90826648684936*^9, 3.9082665101137323`*^9}, {3.908266714824253*^9, 
  3.9082667161578217`*^9}, {3.908266884861656*^9, 3.9082668851030483`*^9}, {
  3.908267524519245*^9, 3.908267568503317*^9}, {3.908268059472519*^9, 
  3.908268101205113*^9}, {3.9082739224792356`*^9, 3.908273924522889*^9}, {
  3.908276697294198*^9, 3.9082767013650837`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "m", " ", "\[Gamma]"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["m", "3"], " ", "\[Gamma]"}], "-", 
  RowBox[{"8", " ", "m", " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["m", "3"], " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "-", 
  FractionBox[
   RowBox[{"24", " ", "m", " ", 
    SuperscriptBox["\[Gamma]", "2"]}], "\[Alpha]"], "+", 
  FractionBox[
   RowBox[{"24", " ", 
    SuperscriptBox["m", "3"], " ", 
    SuperscriptBox["\[Gamma]", "2"]}], "\[Alpha]"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox["\[Gamma]", "2"], " ", "\[CapitalDelta]"}], 
   "\[Alpha]"]}]], "Output",
 CellChangeTimes->{{3.910175616247883*^9, 3.9101756358089647`*^9}, {
   3.9101761077646627`*^9, 3.910176121901658*^9}, 3.9101772105053473`*^9, {
   3.910177498882056*^9, 3.910177513893736*^9}, 3.910181730344604*^9, {
   3.910432632359715*^9, 3.910432660717442*^9}, 3.910432725283223*^9, {
   3.910432811504854*^9, 3.910432826301015*^9}, 3.914303250862484*^9, {
   3.914303668285578*^9, 3.9143036965936728`*^9}, 3.914304417960931*^9, 
   3.9143045922690496`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"dd9f4e27-229b-418d-97c6-f9992486da91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"functionMUpdateSpherical", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"mUpdateSpherical", " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "->", "x"}], ",", " ", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"\[CapitalDelta]", "->", ".001"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"functionPopRisk", "[", "x_", "]"}], " ", "=", 
  RowBox[{"PopRisk", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", " ", "->", "x"}], ",", 
     RowBox[{"\[CapitalDelta]", "->", "0.001"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EffectivePontentialSGD", "[", "m_", "]"}], "=", " ", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"functionMUpdateSpherical", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "m"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EffectivePontentialSGD", "[", "m", "]"}], ",", 
      RowBox[{"functionPopRisk", "[", "m", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.910174984888913*^9, 3.910175007037668*^9}, {
   3.9101750977431183`*^9, 3.910175305986762*^9}, {3.910175352624526*^9, 
   3.9101753579639072`*^9}, 3.910175390108117*^9, {3.9101754733596067`*^9, 
   3.910175535907238*^9}, 3.910175574852833*^9, {3.910176001822201*^9, 
   3.910176008402988*^9}, {3.910176808041707*^9, 3.910176861066937*^9}, {
   3.910176899039283*^9, 3.9101769482951193`*^9}, {3.910177327185899*^9, 
   3.910177356301906*^9}, 3.910177442987571*^9, 3.9101775433792057`*^9, 
   3.910177735481615*^9, 3.910177766535954*^9, {3.910181749024994*^9, 
   3.9101817771898613`*^9}, {3.910181842026628*^9, 3.910181846514146*^9}, 
   3.910181901865202*^9, {3.9101820996375933`*^9, 3.910182100476397*^9}, {
   3.910182512113943*^9, 3.910182514660619*^9}, {3.910182547744885*^9, 
   3.910182556911221*^9}, {3.910244202957018*^9, 3.9102442279031363`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"078b3d5b-1a6a-42ea-9038-0f65fda43b6c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "q"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "2"]}], "-", 
    RowBox[{"2", " ", "\[Rho]"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Rho]", "2"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}], "-", "\[Rho]", "+", 
       RowBox[{"q", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592273438*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"66cf34bb-cc09-4106-8dd9-ef292d5719ae"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592274631*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"f908193e-b8f8-4168-9bb6-39a47f290345"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1H0sFHAYB/DjMjp5XTTlyOu8zVCdRcYUc3LGjdHEOS01L6lbujOb0LWu
prGwHam1nZNLu0slO47juJ0ak87LcTruuMudzpEUZlNten7P9t13n7++/z0e
eSXkq+YYDIb0N/86ONrZsL9vEmMOrmTHi7Wzi/zmXajv5hZymB8pT7eKHO7A
nBudQY5Z2vjUJEAmPxjrOEVBpo8zi6/1r4EnJ60Ng1QjGD9QcjTc9Tu4q3DY
wu6rAZxbE7o+W60Hbz8pZ4mjV8AcW5ULW60DtySG0uQPteDqIirDn7gMLse+
otOMGjC1ctx7ul0NbuzTslsKFsE9C35HXnuqwF72MbFpz5XgtwGsAs2SArwg
7TxJIEyDtUGNYeIPcrBDBY8QbDYBDiKYgribo+B7F4yfhQwZ2CmNX3fpmATt
/ZLajXj3gLlK7WM9kw/OTnV9r7zSABbiyqckpfXR/31GY+ZWlSkAe6337kRI
hGAiZ3YsOVMCjiM5Yre6ZOBaykxlSPcoWJaMt0lxnAAbPZwqvjTLwaW3A6m1
ztPgmXl7cv6IApxbdu6bZZISPBQY/mjIQgX2PSxaaU1YBONFhXEWLDUYs2vO
o2k04N+pfTlSn2Ww8jTlhA9TC76ZYe/gOa8DuzQsZx7Cr4D5WS9ebjL04Iyo
uwkjfQZwZ06xZ8TeKngbdx4rTDeCyRORBDx7DYyLtB4UPUMebJ27eJmDHMIo
oz7lI9u6d9e4SJE/FoUtOf1AjrHyr7NNMqH9W9vH+anIAqWMS8pAdhPk99bk
Ie+lt+pwZcjdHPcoyzbkGzYmWVsHsi+9nxzfidyQmH39vgiZttFcj5UjB2QV
uHEUyOrhs7xYFXIKW9FfpUe2Mm8nepiQxYX0yYGfyHem4im5u8gH/wv8B+0M
Suw=
       "]]},
     Annotation[#, "Charting`Private`Tag$21832#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592295507*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"3c6ec315-184b-4f73-9e5c-273c1df4bbbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IsserlisTheorem", "[", "I4", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.906106722787161*^9, 3.90610678030892*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b82a6456-34d1-4016-a038-f01bc960ef8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"16", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"16", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.914303668322551*^9, 3.9143036967948513`*^9}, 
   3.9143045923091*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"1e1e7581-22ee-4194-9a53-9a6eea65b715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsserlisTheorem", "[", 
  RowBox[{
   RowBox[{"81", " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "-", 
   RowBox[{"81", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "-", 
   RowBox[{"81", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "+", 
   RowBox[{"81", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "-", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "+", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "+", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "-", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    RowBox[{"lf", "[", "4", "]"}]}], "-", 
   RowBox[{"27", " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "+", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "+", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "-", 
   RowBox[{"27", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    RowBox[{"lf", "[", "3", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "+", 
   RowBox[{"9", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "-", 
   RowBox[{"9", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "-", 
   RowBox[{"9", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}], "+", 
   RowBox[{"9", " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "1", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "2", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "3", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"lf", "[", "4", "]"}], "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.91430335406179*^9, 3.914303354111957*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"60328a03-9310-4ba0-b685-105817a31eed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "162"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"1296", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "2"]}], "+", 
  RowBox[{"54", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "3"]}], "-", 
  RowBox[{"54", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "3"]}], "+", 
  RowBox[{"108", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "3"]}], "-", 
  RowBox[{"54", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "3"]}], "+", 
  RowBox[{"54", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "3"]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"324", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"648", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"162", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "-", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], "+", 
  RowBox[{"81", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "4"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.914303668381013*^9, 3.914303696859119*^9}, 
   3.914304592359763*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"0ed3c2cc-000c-49ce-a0dc-832e29a31fb6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9061067274476643`*^9, 3.9061067274503517`*^9}, {
  3.906109950054565*^9, 3.906109963613634*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"3e72b7ad-baa7-4c48-9aa4-ac0c80bd854e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FortranForm", "[", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2noise", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", "->", "c"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9061106997609043`*^9, 3.906110763664494*^9}, {
   3.906115077229741*^9, 3.906115098398069*^9}, 3.906115138776582*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"43a7fbc5-1e49-4a93-8f79-8d674036c613"],

Cell["4*c(1,2)", "Output",
 CellChangeTimes->{{3.914303668393774*^9, 3.9143036968767633`*^9}, 
   3.914304592372957*^9},
 CellLabel->
  "Out[123]//FortranForm=",ExpressionUUID->"361e9902-242e-4d55-a76b-\
e87a596843e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
IsserlisTheorem(9 - 9*lf(1)**2 - 9*lf(2)**2 + 9*lf(1)**2*lf(2)**2)\
\>", "Input",
 CellChangeTimes->{{3.914303354112567*^9, 3.914303354141858*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"b3e72a12-827c-42cb-9963-0f85fca9d7ab"],

Cell[BoxData[
 RowBox[{"IsserlisTheorem", " ", 
  RowBox[{"(", 
   RowBox[{"9", "-", 
    RowBox[{"9", " ", "\[Lambda]", " ", 
     RowBox[{"1", "**", "2"}]}], "-", 
    RowBox[{"9", " ", "\[Lambda]", " ", 
     RowBox[{"2", "**", "2"}]}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914303668397616*^9, 3.9143036968808413`*^9}, 
   3.914304592376422*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"e0491b66-a49e-4330-bc5f-cff285d34a4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FortranForm", "[", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", "->", "c"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.906115147597128*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"5bf10b5d-6aed-4dfd-990e-5b1f544eb1a9"],

Cell["1 - c(1,1) + 2*c(1,2)**2 - c(2,2) + c(1,1)*c(2,2)", "Output",
 CellChangeTimes->{{3.914303668404778*^9, 3.914303696892111*^9}, 
   3.914304592385477*^9},
 CellLabel->
  "Out[125]//FortranForm=",ExpressionUUID->"82b5c967-af05-4a8e-ab24-\
3d6075db55ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
        IsserlisTheorem(9 - 18*lf(1)**2 + 3*lf(1)**4 - 18*lf(2)**2 + 
     -   36*lf(1)**2*lf(2)**2 - 6*lf(1)**4*lf(2)**2 + 3*lf(2)**4 - 
     -   6*lf(1)**2*lf(2)**4 + lf(1)**4*lf(2)**4)\
\>", "Input",
 CellChangeTimes->{{3.914303354143778*^9, 3.9143033542161427`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"9792dfb0-8a2a-48d8-bd4a-aeed783b55a5"],

Cell[BoxData[
 RowBox[{"IsserlisTheorem", " ", 
  RowBox[{"(", 
   RowBox[{"9", "-", 
    RowBox[{"18", " ", "\[Lambda]", " ", 
     RowBox[{"1", "**", "2"}]}], "+", 
    RowBox[{"3", " ", "\[Lambda]", " ", 
     RowBox[{"1", "**", "4"}]}], "-", 
    RowBox[{"18", " ", "\[Lambda]", " ", 
     RowBox[{"2", "**", "2"}]}], "-", 
    RowBox[{"36", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}]}], "-", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"1", "**", "4"}], " ", 
     RowBox[{"2", "**", "2"}]}], "+", 
    RowBox[{"3", " ", "\[Lambda]", " ", 
     RowBox[{"2", "**", "4"}]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "4"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"1", "**", "4"}], " ", 
     RowBox[{"2", "**", "4"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9143036684104843`*^9, 3.914303696896492*^9}, 
   3.9143045923889236`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"2c429e2a-5ccf-46b5-b5aa-3cb31926c40e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FortranForm", "[", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", "->", "c"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.906115153195326*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"64eee4f7-7be2-432a-a693-5a0eef249bef"],

Cell["-2*c(1,2) + 4*c(1,3)*c(2,3) + 2*c(1,2)*c(3,3)", "Output",
 CellChangeTimes->{{3.914303668417452*^9, 3.914303696908*^9}, 
   3.9143045923985567`*^9},
 CellLabel->
  "Out[127]//FortranForm=",ExpressionUUID->"9d09552d-732e-4baf-9313-\
2794d08de182"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
        IsserlisTheorem(9*lf(2)*lf(3) - 9*lf(1)**2*lf(2)*lf(3) - 
     -   3*lf(2)*lf(3)**3 + 3*lf(1)**2*lf(2)*lf(3)**3)\
\>", "Input",
 CellChangeTimes->{{3.9143033542180367`*^9, 3.914303354277245*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"6f3d516c-deb0-4e9e-a59c-a6e3d2f3afae"],

Cell[BoxData[
 RowBox[{"IsserlisTheorem", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"54", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"54", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"3", "**", "3"}]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914303668420926*^9, 3.914303696912138*^9}, 
   3.9143045924019823`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"c7c154e1-5f3a-475e-a188-7689df20a98f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"IsserlisTheorem", "[", "I4", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "->", "c"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"00c58d28-0e17-4a7b-8401-000e7d9d2771"],

Cell["\<\
        4*c(1,2) - 8*c(1,3)*c(2,3) - 8*c(1,4)*c(2,4) - 4*c(1,2)*c(3,3) + 
     -  8*c(1,4)*c(2,4)*c(3,3) + 16*c(1,4)*c(2,3)*c(3,4) + 
     -  16*c(1,3)*c(2,4)*c(3,4) + 8*c(1,2)*c(3,4)**2 - 4*c(1,2)*c(4,4) + 
     -  8*c(1,3)*c(2,3)*c(4,4) + 4*c(1,2)*c(3,3)*c(4,4)\
\>", "Output",
 CellChangeTimes->{{3.9143036684303102`*^9, 3.914303696923867*^9}, 
   3.914304592408937*^9},
 CellLabel->
  "Out[129]//FortranForm=",ExpressionUUID->"67ede1a8-5bc9-4e84-9e6f-\
33daeaad44ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
        IsserlisTheorem(81*lf(3)*lf(4) - 81*lf(1)**2*lf(3)*lf(4) - 
     -   81*lf(2)**2*lf(3)*lf(4) + 
     -   81*lf(1)**2*lf(2)**2*lf(3)*lf(4) - 27*lf(3)**3*lf(4) + 
     -   27*lf(1)**2*lf(3)**3*lf(4) + 27*lf(2)**2*lf(3)**3*lf(4) - 
     -   27*lf(1)**2*lf(2)**2*lf(3)**3*lf(4) - 27*lf(3)*lf(4)**3 + 
     -   27*lf(1)**2*lf(3)*lf(4)**3 + 27*lf(2)**2*lf(3)*lf(4)**3 - 
     -   27*lf(1)**2*lf(2)**2*lf(3)*lf(4)**3 + 9*lf(3)**3*lf(4)**3 - 
     -   9*lf(1)**2*lf(3)**3*lf(4)**3 - 
     -   9*lf(2)**2*lf(3)**3*lf(4)**3 + 
     -   9*lf(1)**2*lf(2)**2*lf(3)**3*lf(4)**3)\
\>", "Input",
 CellChangeTimes->{{3.914303354279079*^9, 3.914303354564539*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"e2ca3761-0118-4a25-81a2-62ceb4e52552"],

Cell[BoxData[
 RowBox[{"IsserlisTheorem", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"972", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"972", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}]}], "+", 
    RowBox[{"972", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"2", "**", "2"}]}], "-", 
    RowBox[{"972", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}]}], "-", 
    RowBox[{"108", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"3", "**", "3"}]}], "-", 
    RowBox[{"108", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}]}], "+", 
    RowBox[{"108", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}]}], "+", 
    RowBox[{"108", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}]}], "-", 
    RowBox[{"81", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"4", "**", "3"}]}], "-", 
    RowBox[{"81", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"4", "**", "3"}]}], "+", 
    RowBox[{"81", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"4", "**", "3"}]}], "+", 
    RowBox[{"81", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"4", "**", "3"}]}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"3", "**", "3"}], " ", 
     RowBox[{"4", "**", "3"}]}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}], " ", 
     RowBox[{"4", "**", "3"}]}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}], " ", 
     RowBox[{"4", "**", "3"}]}], "-", 
    RowBox[{"9", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"1", "**", "2"}], " ", 
     RowBox[{"2", "**", "2"}], " ", 
     RowBox[{"3", "**", "3"}], " ", 
     RowBox[{"4", "**", "3"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914303668434304*^9, 3.914303696928108*^9}, 
   3.9143045924125566`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"10a4bc37-5fe9-4ea5-b3e2-c1ddb67509a8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.906109970852398*^9, 3.9061099803272257`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 577}, {10, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.5,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e7dc3f70-4882-4ad2-b40f-3ebdeda5430b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 560, 9, 46, "Input",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],
Cell[CellGroupData[{
Cell[1143, 33, 176, 2, 46, "Input",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],
Cell[1322, 37, 4751, 112, 146, "Output",ExpressionUUID->"bf8a3dcc-2dec-4318-877c-88386adf87ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6110, 154, 14101, 401, 729, "Input",ExpressionUUID->"a01ba991-b15d-482b-b8ef-b6cf8e12977a"],
Cell[20214, 557, 303, 6, 52, "Output",ExpressionUUID->"7173649d-107e-4eb5-af2e-7ae36da1e601"],
Cell[20520, 565, 512, 13, 52, "Output",ExpressionUUID->"7b434d1f-dbf4-4c9d-8c5d-79980c86c006"],
Cell[21035, 580, 527, 13, 52, "Output",ExpressionUUID->"898cc908-3547-4996-8de4-7eaf3d82d444"],
Cell[21565, 595, 961, 24, 52, "Output",ExpressionUUID->"29855e28-cfd7-4e84-8d07-1e7c06014112"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22563, 624, 12055, 347, 760, "Input",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],
Cell[34621, 973, 2198, 34, 52, "Output",ExpressionUUID->"3c2fdc70-0615-4d9c-97bd-c2e91df56361"],
Cell[36822, 1009, 3551, 73, 77, "Output",ExpressionUUID->"efe2175d-def6-4c2a-9039-ac2d00f82824"],
Cell[40376, 1084, 2577, 46, 69, "Output",ExpressionUUID->"14e64d8e-0ede-4966-a078-d07e713a3a14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42990, 1135, 908, 20, 46, "Input",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],
Cell[43901, 1157, 1272, 30, 74, "Output",ExpressionUUID->"dd9f4e27-229b-418d-97c6-f9992486da91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45210, 1192, 2440, 54, 419, "Input",ExpressionUUID->"078b3d5b-1a6a-42ea-9038-0f65fda43b6c"],
Cell[47653, 1248, 1531, 31, 69, "Output",ExpressionUUID->"66cf34bb-cc09-4106-8dd9-ef292d5719ae"],
Cell[49187, 1281, 1035, 15, 52, "Output",ExpressionUUID->"f908193e-b8f8-4168-9bb6-39a47f290345"],
Cell[50225, 1298, 3530, 76, 358, "Output",ExpressionUUID->"3c6ec315-184b-4f73-9e5c-273c1df4bbbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53792, 1379, 256, 6, 78, "Input",ExpressionUUID->"b82a6456-34d1-4016-a038-f01bc960ef8b"],
Cell[54051, 1387, 2333, 69, 115, "Output",ExpressionUUID->"1e1e7581-22ee-4194-9a53-9a6eea65b715"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56421, 1461, 3447, 101, 145, "Input",ExpressionUUID->"60328a03-9310-4ba0-b685-105817a31eed"],
Cell[59871, 1564, 23778, 706, 859, "Output",ExpressionUUID->"0ed3c2cc-000c-49ce-a0dc-832e29a31fb6"]
}, Open  ]],
Cell[83664, 2273, 228, 4, 46, "Input",ExpressionUUID->"3e72b7ad-baa7-4c48-9aa4-ac0c80bd854e"],
Cell[CellGroupData[{
Cell[83917, 2281, 460, 11, 78, "Input",ExpressionUUID->"43a7fbc5-1e49-4a93-8f79-8d674036c613"],
Cell[84380, 2294, 218, 5, 73, "Output",ExpressionUUID->"361e9902-242e-4d55-a76b-e87a596843e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84635, 2304, 240, 5, 46, "Input",ExpressionUUID->"b3e72a12-827c-42cb-9963-0f85fca9d7ab"],
Cell[84878, 2311, 582, 15, 55, "Output",ExpressionUUID->"e0491b66-a49e-4330-bc5f-cff285d34a4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85497, 2331, 357, 10, 78, "Input",ExpressionUUID->"5bf10b5d-6aed-4dfd-990e-5b1f544eb1a9"],
Cell[85857, 2343, 257, 5, 73, "Output",ExpressionUUID->"82b5c967-af05-4a8e-ab24-3d6075db55ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86151, 2353, 363, 7, 101, "Input",ExpressionUUID->"9792dfb0-8a2a-48d8-bd4a-aeed783b55a5"],
Cell[86517, 2362, 1169, 31, 86, "Output",ExpressionUUID->"2c429e2a-5ccf-46b5-b5aa-3cb31926c40e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87723, 2398, 357, 10, 78, "Input",ExpressionUUID->"64eee4f7-7be2-432a-a693-5a0eef249bef"],
Cell[88083, 2410, 252, 5, 73, "Output",ExpressionUUID->"9d09552d-732e-4baf-9313-2794d08de182"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88372, 2420, 296, 6, 74, "Input",ExpressionUUID->"6f3d516c-deb0-4e9e-a59c-a6e3d2f3afae"],
Cell[88671, 2428, 698, 19, 55, "Output",ExpressionUUID->"c7c154e1-5f3a-475e-a188-7689df20a98f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89406, 2452, 272, 7, 46, "Input",ExpressionUUID->"00c58d28-0e17-4a7b-8401-000e7d9d2771"],
Cell[89681, 2461, 481, 10, 156, "Output",ExpressionUUID->"67ede1a8-5bc9-4e84-9e6f-33daeaad44ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90199, 2476, 746, 14, 294, "Input",ExpressionUUID->"e2ca3761-0118-4a25-81a2-62ceb4e52552"],
Cell[90948, 2492, 2592, 71, 151, "Output",ExpressionUUID->"10a4bc37-5fe9-4ea5-b3e2-c1ddb67509a8"]
}, Open  ]],
Cell[93555, 2566, 177, 3, 46, "Input",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"]
}
]
*)

