(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    129577,       2797]
NotebookOptionsPosition[     80103,       1898]
NotebookOutlinePosition[    126449,       2753]
CellTagsIndexPosition[    126406,       2750]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", 
  "\"\</Users/lucaarnaboldi/Desktop/staircase-ss/mathematica/Isserlis.m\>\""}]\
], "Input",
 CellChangeTimes->{{3.88917609433534*^9, 3.889176119919079*^9}, {
   3.889176311221629*^9, 3.8891763748276167`*^9}, 3.889176476202965*^9, {
   3.889176672392775*^9, 3.889176682503498*^9}, {3.890994311244248*^9, 
   3.89099431208451*^9}, {3.906106260046619*^9, 3.906106262513674*^9}, {
   3.9061094641499367`*^9, 3.9061094655734158`*^9}, 3.914303324866194*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],

Cell[CellGroupData[{

Cell[BoxData["Omega"], "Input",
 CellChangeTimes->{{3.906109467769216*^9, 3.906109468800918*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"6", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "\[CapitalDelta]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.906109470010832*^9, 3.9061094799272003`*^9}, {
   3.906109769638232*^9, 3.906109787153964*^9}, 3.906109894002713*^9, 
   3.9076713021372137`*^9, 3.907745708392392*^9, 3.907749207457515*^9, 
   3.907749399628682*^9, 3.907749504093479*^9, 3.907749574934574*^9, 
   3.907749680430149*^9, 3.907749717136916*^9, 3.907749867605147*^9, 
   3.9082663837344713`*^9, 3.908266430005948*^9, {3.908266692953964*^9, 
   3.908266721002474*^9}, 3.908266894122726*^9, 3.908267685538595*^9, 
   3.908267720753435*^9, 3.9082677559353333`*^9, 3.908268023271358*^9, {
   3.9082766120406*^9, 3.908276628961693*^9}, 3.9082776618532143`*^9, 
   3.908277763812562*^9, {3.908278249404375*^9, 3.908278263161714*^9}, 
   3.908278314453652*^9, 3.908966283937336*^9, 3.9089663394120903`*^9, 
   3.908966908270516*^9, 3.9089670225216312`*^9, 3.908967098198175*^9, 
   3.908967174435177*^9, 3.9089673828351727`*^9, 3.908967588581729*^9, {
   3.908967876868696*^9, 3.908967906273281*^9}, 3.908973969211576*^9, 
   3.9101730973810377`*^9, 3.910173524187935*^9, 3.9101735650843687`*^9, {
   3.910175616192566*^9, 3.910175635715819*^9}, {3.910176107720368*^9, 
   3.910176121821972*^9}, 3.910177210354705*^9, {3.910177498371141*^9, 
   3.910177513219675*^9}, 3.9101817301886*^9, {3.9104326318684072`*^9, 
   3.9104326604795313`*^9}, 3.91043272481992*^9, {3.910432811143269*^9, 
   3.9104328258465357`*^9}, 3.9143032508174953`*^9, {3.914303667826542*^9, 
   3.914303696119133*^9}, 3.9143045921174383`*^9, 3.914304694486383*^9, {
   3.9143055245678673`*^9, 3.914305549018077*^9}, {3.9143105927822742`*^9, 
   3.914310603496395*^9}, 3.9143106682729483`*^9, 3.914310735672964*^9, 
   3.914311073488253*^9, 3.914311117290077*^9, {3.914311289706826*^9, 
   3.9143113077295322`*^9}, 3.914313359119749*^9, {3.914315080409956*^9, 
   3.91431510851928*^9}, 3.914318325926956*^9, 3.914388539052805*^9, 
   3.914389084266172*^9, 3.9144729765269117`*^9, {3.914658221406272*^9, 
   3.914658234229272*^9}, 3.914659677490378*^9, 3.91493350045574*^9, 
   3.915469041441792*^9, 3.915530181891*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"41b23a15-9173-445b-9589-3f245b4e46db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"l", " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Expand", "[", "1", "]"}], "\[IndentingNewLine]", "I2"}], " ", 
     "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lf", "[", "1", "]"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "2", "]"}], ")"}]}], "]"}], 
       "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", "1", ")"}], "*", 
          RowBox[{"lf", "[", "2", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"lf", "[", "3", "]"}], ")"}]}], "]"}], 
        "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", "1", ")"}], "*", 
         RowBox[{"(", "1", ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "3", "]"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "4", "]"}], ")"}]}], "]"}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"l", "=", "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "2", "]"}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"I2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "1", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "2", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"I3", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"2", "*", 
      RowBox[{"lf", "[", "1", "]"}], "*", 
      RowBox[{"lf", "[", "2", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"I4", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"lf", "[", "2", "]"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "4", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "3"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2noise", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], 
         "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}]}],
         "]"}], "\[IndentingNewLine]", "I2"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "3"}], "-", 
            RowBox[{"3", "*", 
             RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "3"}], "-", 
            RowBox[{"3", "*", 
             RowBox[{"lf", "[", "2", "]"}]}]}], ")"}]}], "]"}], 
        "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}],
            "*", 
           RowBox[{"lf", "[", "2", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
             RowBox[{"3", "*", 
              RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}], 
         "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", "*", 
             RowBox[{
              RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", "*", 
             RowBox[{
              RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
            RowBox[{"3", "*", 
             RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "4", "]"}], "^", "3"}], "-", 
            RowBox[{"3", "*", 
             RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "4"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2noise", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
           RowBox[{"12", "*", 
            RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "-", 
           RowBox[{"12", "*", 
            RowBox[{"lf", "[", "2", "]"}]}]}], ")"}]}], "]"}], 
       "\[IndentingNewLine]", "I2"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "3"}], 
           ")"}]}], "]"}], "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", "*", 
              RowBox[{
               RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
             RowBox[{"12", "*", 
              RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
           RowBox[{"lf", "[", "2", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
             RowBox[{"6", "*", 
              RowBox[{
               RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], 
            ")"}]}], "]"}], "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{
              RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
            RowBox[{"12", "*", 
             RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{
              RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "-", 
            RowBox[{"12", "*", 
             RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "4", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "+", "3"}], 
           ")"}]}], "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "5"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "6"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.90610581643575*^9, 3.9061058859481583`*^9}, {
   3.906106474094995*^9, 3.906106532362823*^9}, {3.9061066069904337`*^9, 
   3.906106615382628*^9}, {3.9061066750808268`*^9, 3.906106712009593*^9}, {
   3.906115106839115*^9, 3.906115122709948*^9}, {3.907745657851212*^9, 
   3.907745704584968*^9}, {3.907749117910213*^9, 3.907749201638482*^9}, {
   3.9077492846421947`*^9, 3.907749395631675*^9}, {3.907749463532156*^9, 
   3.907749567398479*^9}, {3.90774966156633*^9, 3.907749665341361*^9}, {
   3.907749788183622*^9, 3.9077498638018923`*^9}, {3.908266683682056*^9, 
   3.908266687621731*^9}, {3.908267597227324*^9, 3.908267610424596*^9}, {
   3.908267649381763*^9, 3.908267717109837*^9}, {3.908276469596464*^9, 
   3.9082764823283367`*^9}, {3.9082765503105497`*^9, 
   3.9082766261431417`*^9}, {3.90827760161267*^9, 3.90827765811966*^9}, {
   3.908277754167019*^9, 3.908277760578492*^9}, {3.9082781934978228`*^9, 
   3.908278260069944*^9}, 3.9082783409216833`*^9, {3.908966315631646*^9, 
   3.908966335740967*^9}, {3.9089668899534063`*^9, 3.908966903385786*^9}, {
   3.908967003376378*^9, 3.908967017594686*^9}, {3.908967078296946*^9, 
   3.908967170564126*^9}, {3.908967230305645*^9, 3.908967374339464*^9}, {
   3.908967543494525*^9, 3.908967558592546*^9}, {3.90896785160744*^9, 
   3.9089679032570467`*^9}, {3.908973937589469*^9, 3.9089739546369*^9}, {
   3.910173373000901*^9, 3.910173420819803*^9}, {3.910173480081517*^9, 
   3.910173538797153*^9}, {3.9101755863956003`*^9, 3.910175602387993*^9}, {
   3.910177181842781*^9, 3.910177194474375*^9}, {3.910177454003541*^9, 
   3.910177491399323*^9}, {3.910181698187571*^9, 3.910181718697147*^9}, {
   3.9102442609703608`*^9, 3.910244281617621*^9}, {3.9104326008984537`*^9, 
   3.910432657434931*^9}, {3.910432772698855*^9, 3.9104328066270437`*^9}, {
   3.9143033335418253`*^9, 3.91430335401856*^9}, {3.914303518398829*^9, 
   3.914303545905094*^9}, {3.9143035943185663`*^9, 3.914303662126877*^9}, {
   3.914304643785157*^9, 3.91430469069508*^9}, {3.914311028016672*^9, 
   3.914311044392208*^9}, {3.914311098399727*^9, 3.914311113200554*^9}, {
   3.914311151926106*^9, 3.91431117073911*^9}, {3.914313336427166*^9, 
   3.914313355176724*^9}, {3.9143183054334793`*^9, 3.914318321450137*^9}, {
   3.914388503644341*^9, 3.9143885328534613`*^9}, {3.91438875307837*^9, 
   3.9143890799154253`*^9}, 3.914658137418548*^9, 3.91465823121216*^9, {
   3.91465965576378*^9, 3.914659662655932*^9}, {3.9155301724019747`*^9, 
   3.915530178516636*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"a01ba991-b15d-482b-b8ef-b6cf8e12977a"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
  RowBox[{"\[Lambda]", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897092*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"9b10492b-8f94-4b34-9481-c007aca3a544"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox[
   RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], "-", 
  SuperscriptBox[
   RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897974*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"3686fdfb-9f0b-4cac-ae04-ededaab71fac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181899538*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"2c1b7c88-c3eb-4c73-9490-cec640e27431"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "2"]}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.9155301819011593`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"ba1273e5-5b00-42f4-aa2d-e7fd6bff4c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Psit", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Psis", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Psis", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDtt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "4"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiHDss", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiHDss", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiHDts", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiHDts", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDnoise", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2noise", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiGFt", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiGFs", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiGFs", "=", "0"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Riskss", " ", "=", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Riskss", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Risktt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Riskts", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Riskts", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pinv", " ", "=", " ", 
   RowBox[{"1", "/", "\[Rho]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qorthinv", " ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"q", "-", 
      RowBox[{
       RowBox[{"m", "^", "2"}], "/", "\[Rho]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFM", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"Psit", "-", "Psis"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQ", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"PhiGFt", "-", "PhiGFs"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQorth", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"GFQ", " ", "-", " ", 
     RowBox[{"m", "*", "Pinv", "*", "GFM"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HDQ", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"PhiHDtt", "+", "PhiHDss", "-", 
     RowBox[{"2", "*", "PhiHDts"}], "+", 
     RowBox[{"\[CapitalDelta]", "*", "PhiHDnoise"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mUpdate", " ", "=", 
  RowBox[{"\[Gamma]", "*", "GFM"}]}], "\[IndentingNewLine]", 
 RowBox[{"qUpdate", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", "*", "\[Gamma]", "*", "GFQ"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", 
     RowBox[{"1", "/", "\[Alpha]"}], "*", "HDQ"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", "ind", "*", 
     RowBox[{"(", 
      RowBox[{"GFM", "*", "Pinv", "*", "GFM"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", "ind", "*", 
     RowBox[{"(", 
      RowBox[{"GFQorth", "*", "Qorthinv", "*", "GFQorth"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PopRisk", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{"Riskss", " ", "+", "Risktt", "-", 
     RowBox[{"2", "*", "Riskts"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxV1IU2EABuBzlpoXrVYQiD9DZVvqzJpFZULzmwUatDIRp3YgrbXymFbK
IptWK12FCIadCyOVHCvaIDFzRW1FK+wHGpgGSYXLBBkc2YYpalHfu4uHJ62m
4bBRwjBMBoW/xrlv6xNF4vdyAu70f9Y1pIjE0PVwH56SfizGb1SOMqwNG6pw
7u63HP7zS1mD+Wkrj5v5TedwzypPEx6cOzh5hr5ufOI7dneQGczaVUHsytex
Z+ntz8qjZygn1aflIul7X6HBP/bYKnCBx1GJP2209GDOcX0AG0aF+3jnk9Uv
sX7X/Az23T02i2/FrY3gF7abv3FoamAFpw6P/sUaThuopy+aC37i53PsFlm6
SOKXhotwMH7sAJbbxvT49VGlbz092eyJfkcmKQplikSRJ3DYXC014iZNtQnH
3NvQiK955RfwdMKVNpyb+k3AJ5z2Bzj8TvoIj7hCbnw5kzzFst5WL2aShgI4
p38pgrefHGfDdFPAYsS1F2NMmL+kqsd1V13RY7d1W/Ahv7YFH1d8sOId/0Lt
eDa2ahkHc9awEfp5a0LrPN1XZr6BtybypgV6qbf0FPYl7Xfi7BK1Cyvq9toL
s0RSohccOF3X9RgfkTCv8PJE8eZe+lBHtwZ3cv3JWdkiWaj9koL/A2pMNWw=

  "],
 CellLabel->
  "In[141]:=",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],

Cell[BoxData[
 RowBox[{"6", " ", "m", " ", "\[Gamma]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "q"}], "+", "\[Rho]"}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530181946827*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"2eb0d673-6ded-4c7a-a45e-b9ca7b875204"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "\[Alpha]"], 
  RowBox[{"4", " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Gamma]", " ", "\[CapitalDelta]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "q"}], "+", "\[Rho]"}], ")"}]}], "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"6", " ", "ind", " ", "q", " ", "\[Gamma]"}], "+", 
           RowBox[{"4", " ", "ind", " ", "\[Gamma]", " ", "\[Rho]"}]}], 
          ")"}]}]}], ")"}]}], "+", 
     RowBox[{"q", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["q", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"3", " ", "ind", " ", "\[Alpha]"}]}], ")"}], " ", 
         "\[Gamma]"}], "-", 
        RowBox[{"3", " ", "q", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"ind", " ", "\[Alpha]"}]}], ")"}], " ", "\[Gamma]", " ",
             "\[Rho]"}]}], ")"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"ind", " ", "\[Alpha]"}]}], ")"}], " ", "\[Gamma]", " ",
             "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530182118517*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"8210c7c8-1311-41e5-8ac0-3efb7f2c3d4e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "q"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "2"]}], "-", 
    RowBox[{"2", " ", "\[Rho]"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Rho]", "2"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "-", "q", "-", "\[Rho]", "+", 
       RowBox[{"q", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530182120926*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"64dffd23-d161-4e61-9d79-e9e00a3987cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mUpdateSpherical", " ", "=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"mUpdate", "-", 
        RowBox[{
         RowBox[{"m", "/", "2"}], "*", "qUpdate"}]}], ")"}], "/", 
      "\[Gamma]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]", "->", "1"}], ",", 
       RowBox[{"q", "->", "1"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.908266318749345*^9, 3.9082663205408154`*^9}, {
  3.90826648684936*^9, 3.9082665101137323`*^9}, {3.908266714824253*^9, 
  3.9082667161578217`*^9}, {3.908266884861656*^9, 3.9082668851030483`*^9}, {
  3.908267524519245*^9, 3.908267568503317*^9}, {3.908268059472519*^9, 
  3.908268101205113*^9}, {3.9082739224792356`*^9, 3.908273924522889*^9}, {
  3.908276697294198*^9, 3.9082767013650837`*^9}, {3.914304731427742*^9, 
  3.914304752847*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "m"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["m", "3"]}], "-", 
  RowBox[{"8", " ", "ind", " ", "m", " ", "\[Gamma]"}], "+", 
  RowBox[{"8", " ", "ind", " ", 
   SuperscriptBox["m", "3"], " ", "\[Gamma]"}], "-", 
  FractionBox[
   RowBox[{"24", " ", "m", " ", "\[Gamma]"}], "\[Alpha]"], "+", 
  FractionBox[
   RowBox[{"24", " ", 
    SuperscriptBox["m", "3"], " ", "\[Gamma]"}], "\[Alpha]"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["m", "2"], " ", "\[Gamma]", " ", "\[CapitalDelta]"}], 
   "\[Alpha]"]}]], "Output",
 CellChangeTimes->{{3.910175616247883*^9, 3.9101756358089647`*^9}, {
   3.9101761077646627`*^9, 3.910176121901658*^9}, 3.9101772105053473`*^9, {
   3.910177498882056*^9, 3.910177513893736*^9}, 3.910181730344604*^9, {
   3.910432632359715*^9, 3.910432660717442*^9}, 3.910432725283223*^9, {
   3.910432811504854*^9, 3.910432826301015*^9}, 3.914303250862484*^9, {
   3.914303668285578*^9, 3.9143036965936728`*^9}, 3.914304417960931*^9, 
   3.9143045922690496`*^9, 3.914304694967937*^9, {3.914304736075581*^9, 
   3.914304753894133*^9}, {3.91430552482021*^9, 3.914305549335702*^9}, {
   3.914310593507462*^9, 3.914310603839993*^9}, 3.9143106688626003`*^9, 
   3.914310737202118*^9, 3.914311073781254*^9, 3.914311117436717*^9, {
   3.9143112936767*^9, 3.914311309824422*^9}, 3.914313359652549*^9, {
   3.914315083831292*^9, 3.914315109268085*^9}, 3.914318326158783*^9, 
   3.914388540803773*^9, 3.914389088967222*^9, 3.914472978521673*^9, {
   3.9146582234034*^9, 3.914658234403165*^9}, 3.914659678118553*^9, 
   3.914933501551365*^9, 3.915469043007234*^9, 3.9155301821623507`*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"d23d49db-099f-4fcd-9355-4e41a60a6acc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"Psis", "\[IndentingNewLine]", "Psit", "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "GFM", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"HDQ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "->", "1"}], ",", 
     RowBox[{"q", "->", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"GFM", "*", "Pinv", "*", "GFM"}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "->", "1"}], ",", 
     RowBox[{"q", "->", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"GFQorth", "*", "Qorthinv", "*", "GFQorth"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "->", "1"}], ",", 
     RowBox[{"q", "->", "1"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.914317125232747*^9, 3.9143171492681837`*^9}, {
  3.9143182570196543`*^9, 3.914318293266274*^9}, {3.914388052389633*^9, 
  3.9143881129494963`*^9}, {3.914388338805337*^9, 3.914388353249832*^9}, {
  3.914388398391151*^9, 3.914388433360117*^9}, {3.914388592634233*^9, 
  3.914388604430834*^9}, {3.91438937043053*^9, 3.914389383180684*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"84eb75c1-d600-4dcf-9187-07310f16ebbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "m"}], "+", 
  RowBox[{"6", " ", "m", " ", "q"}]}]], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182166831*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"ef0d0c8f-46ca-47d4-8a58-71083ead9ee3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "m"}], "+", 
  RowBox[{"6", " ", "m", " ", "\[Rho]"}]}]], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182172798*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"97ebb9e0-f4ac-4040-a65b-d7e1d4085ac9"],

Cell[BoxData[
 RowBox[{"6", " ", "m", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "q"}], "+", "\[Rho]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182173723*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"11b50acd-9b0e-4654-9d36-1d399a87e4a5"],

Cell[BoxData[
 RowBox[{"48", "+", 
  RowBox[{"4", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "12"}], " ", "m"}], "+", "\[CapitalDelta]"}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182174695*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"47d5d283-3361-4c9f-a90b-e002f64718c7"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182175557*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"80e38953-31b7-451b-bb09-e22bfc23b696"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "16"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["m", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.914317138202794*^9, 3.9143171499156523`*^9}, {
   3.914318270530484*^9, 3.914318280089238*^9}, 3.9143183261646557`*^9, {
   3.914388067965355*^9, 3.914388113507799*^9}, 3.914388354667025*^9, 
   3.9143884021500072`*^9, 3.914388433895501*^9, 3.9143885408091507`*^9, {
   3.914388593655034*^9, 3.9143886049738903`*^9}, 3.914389088972748*^9, 
   3.914389383810055*^9, 3.9144729785286407`*^9, {3.914658223407613*^9, 
   3.914658234406394*^9}, 3.914659678122213*^9, 3.91493350155445*^9, 
   3.915469043012753*^9, 3.915530182176614*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"2f453aeb-2653-46d2-9cfa-0289126d2fc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"functionMUpdateSpherical", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"mUpdateSpherical", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "->", "1"}], ",", 
     RowBox[{"q", "->", "1"}], ",", 
     RowBox[{"m", "->", "x"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", ".05"}], ",", 
     RowBox[{"\[CapitalDelta]", "->", "0"}], ",", " ", 
     RowBox[{"\[Alpha]", "->", 
      RowBox[{"+", "Infinity"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"functionPopRisk", "[", "x_", "]"}], " ", "=", 
  RowBox[{"PopRisk", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "->", "1"}], ",", 
     RowBox[{"q", "->", "1"}], ",", 
     RowBox[{"m", " ", "->", "x"}], ",", 
     RowBox[{"\[CapitalDelta]", "->", "0"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EffectivePontentialSGD", "[", "m_", "]"}], "=", " ", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"functionMUpdateSpherical", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "m"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EffectivePontentialSGD", "[", "m", "]"}], ",", 
     RowBox[{"functionPopRisk", "[", "m", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.910174984888913*^9, 3.910175007037668*^9}, {
   3.9101750977431183`*^9, 3.910175305986762*^9}, {3.910175352624526*^9, 
   3.9101753579639072`*^9}, 3.910175390108117*^9, {3.9101754733596067`*^9, 
   3.910175535907238*^9}, 3.910175574852833*^9, {3.910176001822201*^9, 
   3.910176008402988*^9}, {3.910176808041707*^9, 3.910176861066937*^9}, {
   3.910176899039283*^9, 3.9101769482951193`*^9}, {3.910177327185899*^9, 
   3.910177356301906*^9}, 3.910177442987571*^9, 3.9101775433792057`*^9, 
   3.910177735481615*^9, 3.910177766535954*^9, {3.910181749024994*^9, 
   3.9101817771898613`*^9}, {3.910181842026628*^9, 3.910181846514146*^9}, 
   3.910181901865202*^9, {3.9101820996375933`*^9, 3.910182100476397*^9}, {
   3.910182512113943*^9, 3.910182514660619*^9}, {3.910182547744885*^9, 
   3.910182556911221*^9}, {3.910244202957018*^9, 3.9102442279031363`*^9}, {
   3.914315060365589*^9, 3.914315061881171*^9}, {3.914315140891902*^9, 
   3.914315141135477*^9}, {3.9143171194599047`*^9, 3.914317121587878*^9}, {
   3.9143839180208273`*^9, 3.914383922795385*^9}, {3.91438396149509*^9, 
   3.9143839930334806`*^9}, {3.914384266706427*^9, 3.914384272756805*^9}, {
   3.9143843120538282`*^9, 3.9143843336841803`*^9}, {3.914384374776284*^9, 
   3.914384375341796*^9}, {3.914384413542651*^9, 3.914384468567194*^9}, {
   3.914384607729967*^9, 3.91438468476896*^9}, {3.914473500722534*^9, 
   3.914473505716144*^9}, 3.914473565168456*^9, {3.91448245174187*^9, 
   3.914482498064542*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"078b3d5b-1a6a-42ea-9038-0f65fda43b6c"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"4", " ", "x"}], "-", 
  RowBox[{"0.4`", " ", "ind", " ", "x"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.4`", " ", "ind", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592273438*^9, 3.914304694973193*^9, {
   3.91430552490273*^9, 3.914305549341189*^9}, {3.914310593520815*^9, 
   3.914310603847251*^9}, 3.914310668867679*^9, 3.9143107372071342`*^9, 
   3.914311073786118*^9, 3.914311117442855*^9, {3.91431129368176*^9, 
   3.914311309829872*^9}, 3.9143133596567698`*^9, {3.914315062691723*^9, 
   3.914315109272901*^9}, 3.914315142138631*^9, 3.914318326182205*^9, 
   3.9143839235404*^9, {3.9143839715703087`*^9, 3.9143839944230137`*^9}, {
   3.914384273984908*^9, 3.914384278457677*^9}, {3.914384313274851*^9, 
   3.91438433518878*^9}, 3.914384382266821*^9, {3.9143844142753687`*^9, 
   3.914384468906494*^9}, {3.914384608629655*^9, 3.9143846860026407`*^9}, 
   3.914388540833811*^9, 3.914389088998703*^9, 3.914472978567136*^9, 
   3.914473506667547*^9, 3.9144735665862494`*^9, {3.914482455652132*^9, 
   3.914482498625765*^9}, {3.914658223432383*^9, 3.914658234419457*^9}, 
   3.914659678141179*^9, 3.91493350157236*^9, 3.9154690430390997`*^9, 
   3.915530182186306*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"ccfb5862-0bc9-4270-9ba8-81cce17f02f3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592273438*^9, 3.914304694973193*^9, {
   3.91430552490273*^9, 3.914305549341189*^9}, {3.914310593520815*^9, 
   3.914310603847251*^9}, 3.914310668867679*^9, 3.9143107372071342`*^9, 
   3.914311073786118*^9, 3.914311117442855*^9, {3.91431129368176*^9, 
   3.914311309829872*^9}, 3.9143133596567698`*^9, {3.914315062691723*^9, 
   3.914315109272901*^9}, 3.914315142138631*^9, 3.914318326182205*^9, 
   3.9143839235404*^9, {3.9143839715703087`*^9, 3.9143839944230137`*^9}, {
   3.914384273984908*^9, 3.914384278457677*^9}, {3.914384313274851*^9, 
   3.91438433518878*^9}, 3.914384382266821*^9, {3.9143844142753687`*^9, 
   3.914384468906494*^9}, {3.914384608629655*^9, 3.9143846860026407`*^9}, 
   3.914388540833811*^9, 3.914389088998703*^9, 3.914472978567136*^9, 
   3.914473506667547*^9, 3.9144735665862494`*^9, {3.914482455652132*^9, 
   3.914482498625765*^9}, {3.914658223432383*^9, 3.914658234419457*^9}, 
   3.914659678141179*^9, 3.91493350157236*^9, 3.9154690430390997`*^9, 
   3.91553018218748*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"570b4356-da1a-4df6-a6b3-26707f89c8e2"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "-", 
     RowBox[{"0.4`", " ", "ind"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox[
      SuperscriptBox["m", "2"], "2"]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"0.4`", " ", "ind"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox[
      SuperscriptBox["m", "4"], "4"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592273438*^9, 3.914304694973193*^9, {
   3.91430552490273*^9, 3.914305549341189*^9}, {3.914310593520815*^9, 
   3.914310603847251*^9}, 3.914310668867679*^9, 3.9143107372071342`*^9, 
   3.914311073786118*^9, 3.914311117442855*^9, {3.91431129368176*^9, 
   3.914311309829872*^9}, 3.9143133596567698`*^9, {3.914315062691723*^9, 
   3.914315109272901*^9}, 3.914315142138631*^9, 3.914318326182205*^9, 
   3.9143839235404*^9, {3.9143839715703087`*^9, 3.9143839944230137`*^9}, {
   3.914384273984908*^9, 3.914384278457677*^9}, {3.914384313274851*^9, 
   3.91438433518878*^9}, 3.914384382266821*^9, {3.9143844142753687`*^9, 
   3.914384468906494*^9}, {3.914384608629655*^9, 3.9143846860026407`*^9}, 
   3.914388540833811*^9, 3.914389088998703*^9, 3.914472978567136*^9, 
   3.914473506667547*^9, 3.9144735665862494`*^9, {3.914482455652132*^9, 
   3.914482498625765*^9}, {3.914658223432383*^9, 3.914658234419457*^9}, 
   3.914659678141179*^9, 3.91493350157236*^9, 3.9154690430390997`*^9, 
   3.91553018218845*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"bc280593-6d70-470d-b1c5-4e476b8e659a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, {}, 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
dqobGa9hl3+a9HE2hf97HwL//z7kf5VyVdE=
       "]]},
     Annotation[#, "Charting`Private`Tag$35499#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 1.9999999526113406`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9101755081308327`*^9, 3.910175537241335*^9}, 
   3.910175576453516*^9, {3.910175616269581*^9, 3.910175635829184*^9}, 
   3.910176009431346*^9, {3.910176107778064*^9, 3.910176121905992*^9}, 
   3.9101768101958113`*^9, {3.910176925101039*^9, 3.910176950189887*^9}, 
   3.9101772105095377`*^9, {3.9101773386842947`*^9, 3.910177357365982*^9}, 
   3.910177444578661*^9, {3.910177498887499*^9, 3.910177513898137*^9}, 
   3.910177544540236*^9, 3.910177738977914*^9, 3.9101777700037813`*^9, {
   3.9101817303509197`*^9, 3.910181778977416*^9}, 3.9101818480736113`*^9, 
   3.910181903177113*^9, 3.910182105357942*^9, 3.9101825171525707`*^9, {
   3.910182550362905*^9, 3.910182557810361*^9}, {3.910432632362289*^9, 
   3.910432660736731*^9}, 3.910432725286178*^9, {3.910432811507704*^9, 
   3.9104328263039103`*^9}, 3.914303250877342*^9, {3.914303668290357*^9, 
   3.914303696599042*^9}, 3.914304592273438*^9, 3.914304694973193*^9, {
   3.91430552490273*^9, 3.914305549341189*^9}, {3.914310593520815*^9, 
   3.914310603847251*^9}, 3.914310668867679*^9, 3.9143107372071342`*^9, 
   3.914311073786118*^9, 3.914311117442855*^9, {3.91431129368176*^9, 
   3.914311309829872*^9}, 3.9143133596567698`*^9, {3.914315062691723*^9, 
   3.914315109272901*^9}, 3.914315142138631*^9, 3.914318326182205*^9, 
   3.9143839235404*^9, {3.9143839715703087`*^9, 3.9143839944230137`*^9}, {
   3.914384273984908*^9, 3.914384278457677*^9}, {3.914384313274851*^9, 
   3.91438433518878*^9}, 3.914384382266821*^9, {3.9143844142753687`*^9, 
   3.914384468906494*^9}, {3.914384608629655*^9, 3.9143846860026407`*^9}, 
   3.914388540833811*^9, 3.914389088998703*^9, 3.914472978567136*^9, 
   3.914473506667547*^9, 3.9144735665862494`*^9, {3.914482455652132*^9, 
   3.914482498625765*^9}, {3.914658223432383*^9, 3.914658234419457*^9}, 
   3.914659678141179*^9, 3.91493350157236*^9, 3.9154690430390997`*^9, 
   3.9155301822089233`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"392a683c-cf40-408c-8bda-e9d50ca47d37"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9061067274476643`*^9, 3.9061067274503517`*^9}, {
  3.906109950054565*^9, 3.906109963613634*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"3e72b7ad-baa7-4c48-9aa4-ac0c80bd854e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"IsserlisTheorem", "[", "I3", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "->", "Caa"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "->", "Cab"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "->", "Cac"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "->", "Cad"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "->", "Cbb"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "->", "Cbc"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"2", ",", "4"}], "]"}], "->", "Cbd"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"3", ",", "3"}], "]"}], "->", "Ccc"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"3", ",", "4"}], "]"}], "->", "Ccd"}], ",", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"4", ",", "4"}], "]"}], "->", "Cdd"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.906109970852398*^9, 3.9061099803272257`*^9}, {
  3.914658208143605*^9, 3.91465821400249*^9}, {3.9146582529373827`*^9, 
  3.9146583870301123`*^9}, {3.9146584187950773`*^9, 3.914658553670755*^9}, {
  3.914659720022233*^9, 3.914659772781877*^9}, {3.914933497230851*^9, 
  3.9149334973373423`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"],

Cell["-2*Cab + 4*Cac*Cbc + 2*Cab*Ccc", "Output",
 CellChangeTimes->{
  3.914658350544256*^9, 3.9146583888778143`*^9, {3.914658457000791*^9, 
   3.914658554963758*^9}, 3.914659678179885*^9, {3.914659721801385*^9, 
   3.914659773806737*^9}, 3.9149335016969023`*^9, 3.91546904309667*^9, 
   3.9155301822249537`*^9},
 CellLabel->
  "Out[173]//FortranForm=",ExpressionUUID->"5111f13a-e696-427f-b665-\
99dc60342c59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", "mUpdateSpherical", " ", "]"}]], "Input",
 CellChangeTimes->{{3.9154692303986197`*^9, 3.915469252436583*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"0bb806fe-e6d6-4d34-a5a8-8ae93bfb9207"],

Cell["\<\
        4*m - 4*m**3 - 8*ind*m*\[Gamma] + 8*ind*m**3*\[Gamma] - \
(24*m*\[Gamma])/\[Alpha] + 
     -  (24*m**3*\[Gamma])/\[Alpha] - (2*m**2*\[Gamma]*\[CapitalDelta])/\
\[Alpha]\
\>", "Output",
 CellChangeTimes->{3.915469253241398*^9, 3.915530182229191*^9},
 CellLabel->
  "Out[174]//FortranForm=",ExpressionUUID->"8ca2a5a8-1b50-4ea7-ad66-\
6fc66ba3aa55"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 577}, {10, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.5,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f8810d88-a3a6-446d-ad33-5af63da00185"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 564, 10, 46, "Input",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],
Cell[CellGroupData[{
Cell[1147, 34, 180, 3, 46, "Input",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],
Cell[1330, 39, 5330, 121, 146, "Output",ExpressionUUID->"41b23a15-9173-445b-9589-3f245b4e46db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6697, 165, 16375, 445, 1070, "Input",ExpressionUUID->"a01ba991-b15d-482b-b8ef-b6cf8e12977a"],
Cell[23075, 612, 346, 7, 52, "Output",ExpressionUUID->"9b10492b-8f94-4b34-9481-c007aca3a544"],
Cell[23424, 621, 555, 14, 52, "Output",ExpressionUUID->"3686fdfb-9f0b-4cac-ae04-ededaab71fac"],
Cell[23982, 637, 570, 14, 52, "Output",ExpressionUUID->"2c1b7c88-c3eb-4c73-9490-cec640e27431"],
Cell[24555, 653, 1006, 25, 52, "Output",ExpressionUUID->"ba1273e5-5b00-42f4-aa2d-e7fd6bff4c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25598, 683, 13106, 380, 915, "Input",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],
Cell[38707, 1065, 2830, 43, 52, "Output",ExpressionUUID->"2eb0d673-6ded-4c7a-a45e-b9ca7b875204"],
Cell[41540, 1110, 4321, 85, 107, "Output",ExpressionUUID->"8210c7c8-1311-41e5-8ac0-3efb7f2c3d4e"],
Cell[45864, 1197, 3207, 55, 69, "Output",ExpressionUUID->"64dffd23-d161-4e61-9d79-e9e00a3987cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49108, 1257, 998, 23, 46, "Input",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],
Cell[50109, 1282, 1749, 33, 74, "Output",ExpressionUUID->"d23d49db-099f-4fcd-9355-4e41a60a6acc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51895, 1320, 1314, 30, 233, "Input",ExpressionUUID->"84eb75c1-d600-4dcf-9187-07310f16ebbd"],
Cell[53212, 1352, 761, 14, 52, "Output",ExpressionUUID->"ef0d0c8f-46ca-47d4-8a58-71083ead9ee3"],
Cell[53976, 1368, 766, 14, 52, "Output",ExpressionUUID->"97ebb9e0-f4ac-4040-a65b-d7e1d4085ac9"],
Cell[54745, 1384, 768, 14, 52, "Output",ExpressionUUID->"11b50acd-9b0e-4654-9d36-1d399a87e4a5"],
Cell[55516, 1400, 837, 17, 52, "Output",ExpressionUUID->"47d5d283-3361-4c9f-a90b-e002f64718c7"],
Cell[56356, 1419, 664, 10, 52, "Output",ExpressionUUID->"80e38953-31b7-451b-bb09-e22bfc23b696"],
Cell[57023, 1431, 798, 16, 55, "Output",ExpressionUUID->"2f453aeb-2653-46d2-9cfa-0289126d2fc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57858, 1452, 3023, 63, 140, "Input",ExpressionUUID->"078b3d5b-1a6a-42ea-9038-0f65fda43b6c"],
Cell[60884, 1517, 2269, 36, 52, "Output",ExpressionUUID->"ccfb5862-0bc9-4270-9ba8-81cce17f02f3"],
Cell[63156, 1555, 2164, 35, 69, "Output",ExpressionUUID->"570b4356-da1a-4df6-a6b3-26707f89c8e2"],
Cell[65323, 1592, 2597, 51, 75, "Output",ExpressionUUID->"bc280593-6d70-470d-b1c5-4e476b8e659a"],
Cell[67923, 1645, 9210, 166, 362, "Output",ExpressionUUID->"392a683c-cf40-408c-8bda-e9d50ca47d37"]
}, Open  ]],
Cell[77148, 1814, 228, 4, 46, "Input",ExpressionUUID->"3e72b7ad-baa7-4c48-9aa4-ac0c80bd854e"],
Cell[CellGroupData[{
Cell[77401, 1822, 1634, 43, 109, "Input",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"],
Cell[79038, 1867, 410, 8, 73, "Output",ExpressionUUID->"5111f13a-e696-427f-b665-99dc60342c59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79485, 1880, 235, 4, 46, "Input",ExpressionUUID->"0bb806fe-e6d6-4d34-a5a8-8ae93bfb9207"],
Cell[79723, 1886, 364, 9, 101, "Output",ExpressionUUID->"8ca2a5a8-1b50-4ea7-ad66-6fc66ba3aa55"]
}, Open  ]]
}
]
*)

